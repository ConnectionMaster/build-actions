---
name: Package CI

on:
  workflow_call:
    secrets:
      SSH_USER:
        description: User to SFTP as
      SSH_KEY:
        description: Private key
      SSH_PASSPHRASE:
        description: Decryption passphrase for private key
      META_REPO_ACCESS_TOKEN:
        description: Token to use to trigger bump workflow on robotpy-meta
      RTD_TOKEN:
        description: Token to trigger ReadTheDocs webhook
      RTD_WEBHOOK:
        description: ReadTheDocs webhook URL
      PYPI_API_TOKEN:
        description: Token to publish the package to PyPI

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: psf/black@stable

  #
  # Build native wheels
  #

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-10.15, ubuntu-18.04]
        python_version:
        - '3.6'
        - '3.7'
        - '3.8'
        - '3.9'
        - '3.10'
        architecture: [x64]

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python_version }}
        architecture: ${{ matrix.architecture }}
    - uses: robotpy/build-actions/setup-cxx@v2022
      if: ${{ matrix.os == 'ubuntu-18.04' }}

    - uses: robotpy/build-actions/install-robotpy-build@v2022
    - uses: robotpy/build-actions/install-build-deps@v2022
    - uses: robotpy/build-actions/build-wheel@v2022
    - uses: robotpy/build-actions/test-native-wheel@v2022

    - uses: robotpy/build-actions/validate-sphinx@v2022
      if: ${{ matrix.python_version == '3.7' && matrix.os == 'ubuntu-18.04' }}

    - uses: actions/upload-artifact@v2
      with:
        name: "dist-${{ matrix.os }}"
        path: dist

  #
  # Build roboRIO/raspbian wheels
  #

  cross-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
        - container: robotpy/roborio-cross-ubuntu:2022.2
          name: roborio
        - container: robotpy/raspbian-cross-ubuntu:2022.1
          name: raspbian

    container:
      image: "${{ matrix.os.container }}"

    steps:
    - uses: actions/checkout@v2

    - uses: robotpy/build-actions/install-robotpy-build@v2022
      with:
        python: /build/venv/bin/cross-python
    - uses: robotpy/build-actions/install-build-deps@v2022
      with:
        python: /build/venv/bin/cross-python
        wheeldir: ${{ matrix.os.name }}
    - uses: robotpy/build-actions/build-wheel@v2022
      with:
        python: /build/venv/bin/cross-python

    - uses: actions/upload-artifact@v2
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
      with:
        name: dist-${{ matrix.os.name }}
        path: dist

  #
  # Publish wheels to robotpy site, pypi
  #

  publish-rpyrepo:
    runs-on: ubuntu-latest
    needs: [check, build, cross-build]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')

    steps:

    #
    # RoboRIO wheel
    #

    - uses: actions/download-artifact@v2
      with:
        name: dist-roborio
        path: dist-roborio/

    - uses: robotpy/github-action-scp@atomic
      with:
        local: dist-roborio
        remote: public_html/2022/roborio
        host: narya.tortall.net
        username: ${{ secrets.SSH_USER }}
        privateKey: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        atomicPut: true

    #
    # Raspbian wheel
    #

    - uses: actions/download-artifact@v2
      with:
        name: dist-raspbian
        path: dist-raspbian/

    - uses: robotpy/github-action-scp@atomic
      with:
        local: dist-raspbian
        remote: public_html/2022/raspbian
        host: narya.tortall.net
        username: ${{ secrets.SSH_USER }}
        privateKey: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        atomicPut: true


  publish-pypi:
    runs-on: ubuntu-latest
    needs: [check, build, cross-build]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')

    steps:
    - uses: actions/checkout@v2

    - uses: actions/download-artifact@v2
      with:
        name: dist-windows-latest
        path: dist/

    - uses: actions/download-artifact@v2
      with:
        name: dist-macos-latest
        path: dist/

    - uses: actions/download-artifact@v2
      with:
        name: dist-ubuntu-18.04
        path: dist/

    - uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - uses: robotpy/build-actions/install-robotpy-build@v2022
    - uses: robotpy/build-actions/build-sdist@v2022

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

    - name: Ping readthedocs
      uses: robotpy/build-actions/ping-rtd@v2022
      with:
        token: ${{ secrets.RTD_TOKEN }}
        webhook: ${{ secrets.RTD_WEBHOOK }}

  ping:
    runs-on: ubuntu-latest
    needs: [publish-rpyrepo, publish-pypi]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')

    steps:
    - uses: robotpy/build-actions/ping-meta@v2022
      with:
        token: ${{ secrets.META_REPO_ACCESS_TOKEN }}
